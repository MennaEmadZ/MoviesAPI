{"ast":null,"code":"const INITIAL_STATE = {\n  movieIDs: []\n};\nexport default function AddFavouriteReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"SET_FAVOURITE\":\n      const movieID = state.movieIDs;\n      const favorite = action.payload;\n      const exist = movieID.find(x => x === favorite);\n\n      if (exist === undefined) {\n        return { ...state,\n          movieIDs: [...movieID, favorite]\n        };\n      } else {\n        //return everything not equal to favourite\n        const favorite = action.payload;\n        return movieID.filter(x => x !== favorite);\n      }\n\n    default:\n      return movieID;\n  }\n}\n_c = AddFavouriteReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddFavouriteReducer\");","map":{"version":3,"sources":["/home/mennaemadz/pythonmania/React/Day3/day3/src/store/Reducer/AddFavourite.js"],"names":["INITIAL_STATE","movieIDs","AddFavouriteReducer","state","action","type","movieID","favorite","payload","exist","find","x","undefined","filter"],"mappings":"AAAA,MAAMA,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE;AADU,CAAtB;AAGA,eAAe,SAASC,mBAAT,GAA2D;AAAA,MAA9BC,KAA8B,uEAAtBH,aAAsB;AAAA,MAAPI,MAAO;;AAExE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,YAAMC,OAAO,GAAGH,KAAK,CAACF,QAAtB;AACA,YAAMM,QAAQ,GAAGH,MAAM,CAACI,OAAxB;AACA,YAAMC,KAAK,GAAGH,OAAO,CAACI,IAAR,CAAaC,CAAC,IAAIA,CAAC,KAAKJ,QAAxB,CAAd;;AACA,UAAIE,KAAK,KAAGG,SAAZ,EAAuB;AAErB,eAAO,EACL,GAAGT,KADE;AAELF,UAAAA,QAAQ,EAAE,CAAC,GAAGK,OAAJ,EAAaC,QAAb;AAFL,SAAP;AAID,OAND,MAOI;AAEF;AACA,cAAMA,QAAQ,GAAGH,MAAM,CAACI,OAAxB;AACA,eAAOF,OAAO,CAACO,MAAR,CAAeF,CAAC,IAAIA,CAAC,KAAKJ,QAA1B,CAAP;AAED;;AACH;AACE,aAAOD,OAAP;AApBJ;AAsBD;KAxBuBJ,mB","sourcesContent":["const INITIAL_STATE = {\n  movieIDs: []\n}\nexport default function AddFavouriteReducer(state = INITIAL_STATE, action){\n\n  switch (action.type) {\n    case \"SET_FAVOURITE\":\n      const movieID = state.movieIDs\n      const favorite = action.payload\n      const exist = movieID.find(x => x === favorite);\n      if (exist===undefined) {\n       \n        return {\n          ...state,\n          movieIDs: [...movieID, favorite]\n        }\n      }\n      else{\n\n        //return everything not equal to favourite\n        const favorite = action.payload\n        return movieID.filter(x => x !== favorite);\n\n      }\n    default:\n      return movieID;\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}