{"ast":null,"code":"var _jsxFileName = \"/home/mennaemadz/pythonmania/React/Day3/day3/src/Components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [userData, setUserData] = useState({\n    userEmail: \"\",\n    Password: \"\"\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(userData);\n  };\n\n  const [userDataErr, setUserDataErr] = useState({\n    userEmailInvalid: \"\",\n    PasswordInvalid: \"\"\n  });\n  const [passwordShown, setPasswordShown] = useState(false);\n\n  const togglePassword = () => {\n    setPasswordShown(!passwordShown);\n  };\n\n  const validEmail = new RegExp('^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$');\n  const validPassword = new RegExp('[a-zA-Z0-9]{8}');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" container py-4 px-4\",\n      children: [\"-\", /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group py-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"exampleInputEmail1\",\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: userData.userEmail,\n            onChange: e => {\n              setUserData({ ...userData,\n                userEmail: e.target.value\n              });\n              setUserDataErr({ ...userDataErr,\n                userEmailInvalid: e.target.value.length == 0 ? \"Required value\" : validEmail.test(e.target.value) == false ? \"Invalid Value\" : null\n              });\n            },\n            className: \"form-control\",\n            id: \"exampleInputEmail1\",\n            placeholder: \"Enter email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-danger\",\n            children: userDataErr.userEmailInvalid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group py-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"exampleInputPassword1\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: passwordShown ? \"text\" : \"password\",\n            value: userData.Password,\n            onChange: e => {\n              setUserData({ ...userData,\n                Password: e.target.value\n              });\n              setUserDataErr({ ...userDataErr,\n                PasswordInvalid: e.target.value.length == 0 ? \"Required value\" : validPassword.test(e.target.value) == false ? \"Invalid Password\" : null\n              });\n            },\n            className: \"form-control\",\n            id: \"exampleInputPassword1\",\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-danger\",\n            children: userDataErr.PasswordInvalid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-light my-4\",\n            onClick: togglePassword,\n            children: \"Show Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary my-4\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Login, \"iLqmyd73iqDSZYB0Kg27UaPKbmo=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/mennaemadz/pythonmania/React/Day3/day3/src/Components/Login.js"],"names":["React","useState","Login","userData","setUserData","userEmail","Password","handleSubmit","e","preventDefault","console","log","userDataErr","setUserDataErr","userEmailInvalid","PasswordInvalid","passwordShown","setPasswordShown","togglePassword","validEmail","RegExp","validPassword","target","value","length","test"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nfunction Login() {\n\n    const [userData, setUserData] = useState({\n        userEmail: \"\",\n        Password: \"\"\n    })\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(userData);\n    }\n    const [userDataErr, setUserDataErr] = useState({\n        userEmailInvalid: \"\",\n        PasswordInvalid: \"\"\n    })\n    const [passwordShown, setPasswordShown] = useState(false);\n\n  \n    const togglePassword = () => {\n \n      setPasswordShown(!passwordShown);\n    };\n    const validEmail = new RegExp(\n        '^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$'\n    );\n    const validPassword = new RegExp('[a-zA-Z0-9]{8}');\n\n    return (\n        <>\n            <div className=' container py-4 px-4'>-\n                <form onSubmit={(e) => handleSubmit(e)}>\n                    <div className=\"form-group py-4\">\n                        <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                        <br></br>\n                        <input\n                            type=\"email\"\n                            value={userData.userEmail}\n                            onChange={(e) => {\n                                setUserData({\n                                    ...userData,\n                                    userEmail: e.target.value\n                                });\n                                setUserDataErr({\n                                    ...userDataErr,\n\n                                    userEmailInvalid:\n                                        e.target.value.length == 0 ? \"Required value\" : validEmail.test(e.target.value) == false ? \"Invalid Value\" : null\n                                })\n\n                            }}\n                            className=\"form-control\"\n                            id=\"exampleInputEmail1\"\n                            placeholder=\"Enter email\"\n                        ></input>\n                        <small className=\"text-danger\">{userDataErr.userEmailInvalid}</small>\n\n                    </div>\n                    <div className=\"form-group py-4\">\n                        <label htmlFor=\"exampleInputPassword1\">Password</label>\n                        <br></br>\n                        <input\n                            type={passwordShown ? \"text\" : \"password\"} \n                            value={userData.Password}\n                            onChange={(e) => {\n                                setUserData({\n                                    ...userData,\n                                    Password: e.target.value\n                                });\n                                setUserDataErr({\n                                    ...userDataErr,\n\n                                    PasswordInvalid:\n                                        e.target.value.length == 0 ? \"Required value\" : validPassword.test(e.target.value) == false ? \"Invalid Password\" : null\n                                })\n                            }}\n                            className=\"form-control\"\n                            id=\"exampleInputPassword1\"\n                            placeholder=\"Password\"\n                        ></input>\n                        <small className=\"text-danger\">{userDataErr.PasswordInvalid}</small>\n                        <br></br>\n                        <button \n                        className=\"btn btn-light my-4\"\n                        onClick={togglePassword}\n                        >Show Password</button>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary my-4\">Submit</button>\n                </form>\n                     \n            </div>\n\n        </>\n    );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}