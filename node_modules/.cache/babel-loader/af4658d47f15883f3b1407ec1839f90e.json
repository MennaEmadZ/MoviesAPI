{"ast":null,"code":"var _jsxFileName = \"/home/mennaemadz/pythonmania/React/Day3/day3/src/MoviesAPI.js\",\n    _s = $RefreshSig$();\n\nimport './MoviesApi.css';\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { axiosInstance } from './network/index';\nimport { useSelector, useDispatch } from 'react-redux';\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\nimport StarIcon from '@mui/icons-material/Star';\nimport { amber } from '@mui/material/colors';\nimport { setFavourite } from './store/Ation/Action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MoviesAPI() {\n  _s();\n\n  const favourite = useSelector(state => state.favourite.movieID);\n  const dispatch = useDispatch();\n  const [searchData, setsearchData] = useState({\n    searchVal: \"\"\n  });\n  const [moviesList, setmoviesList] = useState([]);\n  useEffect(() => {\n    axiosInstance.get(\"movie/popular?api_key=4c03591ec60bf980ec7a1be78c875fa5\").then(res => setmoviesList(res.data.results)).catch(err => console.log(err));\n  }, []); //   const [displayFav, setdisplayFav] = useState({\n  //     show: { display: 'inline' },\n  //     hide: { display: 'none' }\n  // });\n  // function StarFilled(id) {\n  //   if (favourite.indexOf(id) !== -1) {\n  //     return <StarIcon sx={{ fontSize: 30, color: amber[500] }} />;\n  //   }\n  //   return <StarBorderIcon sx={{ fontSize: 30, color: amber[500] }}/>;\n  // }\n  // };\n\n  const [displayFav, setdisplayFav] = useState({\n    show: {\n      display: 'inline'\n    },\n    hide: {\n      display: 'none'\n    }\n  });\n\n  const AddFav = id => {\n    dispatch(setFavourite(id));\n    setdisplayFav({ ...displayFav,\n      show: {\n        display: 'none'\n      },\n      hide: {\n        display: 'inline'\n      }\n    });\n  };\n\n  const RemoveFav = () => {\n    setdisplayFav({ ...displayFav,\n      show: {\n        display: 'inline'\n      },\n      hide: {\n        display: 'none'\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container justify-content-center \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          className: \"form-control rounded \",\n          placeholder: \"Search\",\n          value: searchData.searchVal,\n          onChange: e => {\n            setsearchData({ ...searchData,\n              searchVal: e.target.value\n            });\n          },\n          \"aria-describedby\": \"search-addon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/search/${searchData.searchVal}`,\n          className: \"btn btn-outline-light\",\n          id: \"search-addon\",\n          children: \"search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row my-5 justify-content-center  \",\n        children: moviesList.map(movie => {\n          const image = movie.poster_path;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-3 col-md-6 col-sm-6 text-center my-5 \",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card border-0 movie\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body text-center justify-content-center \",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-end\",\n                  style: {\n                    width: \"15rem\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"favButton\",\n                    style: displayFav.show,\n                    onClick: e => {\n                      AddFav(movie.id);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(StarIcon, {\n                      sx: {\n                        fontSize: 30,\n                        color: amber[500]\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"favButton\",\n                    style: displayFav.hide,\n                    onClick: e => {\n                      AddFav(movie.id);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(StarIcon, {\n                      sx: {\n                        fontSize: 30,\n                        color: amber[500]\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/${movie.id}`,\n                  className: \"film\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: 'https://image.tmdb.org/t/p/w500/' + image,\n                    style: {\n                      width: \"15rem\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"pt-3\",\n                    children: movie.original_title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(MoviesAPI, \"dagz2vZXhuck2cdwxajmLV4R6es=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = MoviesAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesAPI\");","map":{"version":3,"sources":["/home/mennaemadz/pythonmania/React/Day3/day3/src/MoviesAPI.js"],"names":["React","useEffect","useState","Link","axiosInstance","useSelector","useDispatch","StarBorderIcon","StarIcon","amber","setFavourite","MoviesAPI","favourite","state","movieID","dispatch","searchData","setsearchData","searchVal","moviesList","setmoviesList","get","then","res","data","results","catch","err","console","log","displayFav","setdisplayFav","show","display","hide","AddFav","id","RemoveFav","e","target","value","map","movie","image","poster_path","width","fontSize","color","original_title"],"mappings":"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","sourcesContent":["import './MoviesApi.css';\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { axiosInstance } from './network/index';\nimport { useSelector, useDispatch } from 'react-redux';\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\nimport StarIcon from '@mui/icons-material/Star';\nimport { amber } from '@mui/material/colors';\nimport { setFavourite } from './store/Ation/Action';\n\n\n\nexport default function MoviesAPI() {\n\n  const favourite = useSelector((state) => state.favourite.movieID);\n\n\n  const dispatch = useDispatch();\n\n  const [searchData, setsearchData] = useState({\n    searchVal: \"\"\n  })\n  const [moviesList, setmoviesList] = useState([]);\n\n  useEffect(() => {\n    axiosInstance\n      .get(\"movie/popular?api_key=4c03591ec60bf980ec7a1be78c875fa5\")\n      .then((res) => setmoviesList(res.data.results))\n      .catch((err) => console.log(err));\n  }, []);\n  \n  //   const [displayFav, setdisplayFav] = useState({\n  //     show: { display: 'inline' },\n  //     hide: { display: 'none' }\n  // });\n  // function StarFilled(id) {\n\n  //   if (favourite.indexOf(id) !== -1) {\n  //     return <StarIcon sx={{ fontSize: 30, color: amber[500] }} />;\n  //   }\n  //   return <StarBorderIcon sx={{ fontSize: 30, color: amber[500] }}/>;\n  // }\n  // };\n  const [displayFav, setdisplayFav] = useState({\n    show: { display: 'inline' },\n    hide: { display: 'none' }\n  });\n\n  const AddFav = (id) => {\n\n    dispatch(setFavourite(id));\n    setdisplayFav({\n      ...displayFav,\n      show: { display: 'none' },\n      hide: { display: 'inline' }\n    })\n\n  };\n\n  const RemoveFav = () => {\n    setdisplayFav({\n      ...displayFav,\n      show: { display: 'inline' },\n      hide: { display: 'none' }\n    })\n  }\n\n\n\n    return (\n      <>\n        <div className=\"container justify-content-center \">\n          <div className=\"input-group my-3\">\n            <input\n              type=\"search\"\n              className=\"form-control rounded \"\n              placeholder=\"Search\"\n              value={searchData.searchVal}\n              onChange={(e) => {\n                setsearchData({\n                  ...searchData,\n                  searchVal: e.target.value\n                });\n              }}\n\n              aria-describedby=\"search-addon\"\n            ></input>\n\n            <Link to={`/search/${searchData.searchVal}`} className=\"btn btn-outline-light\" id=\"search-addon\"   >\n              search\n            </Link>\n          </div>\n\n          <div className=\"row my-5 justify-content-center  \">\n            {moviesList.map((movie) => {\n              const image = movie.poster_path\n\n\n              return (\n\n\n                <div className=\"col-lg-3 col-md-6 col-sm-6 text-center my-5 \" key={movie.id}>\n                  <div className=\"card border-0 movie\" >\n                    <div className=\"card-body text-center justify-content-center \" >\n                      <div className='text-end' style={{ width: \"15rem\" }}>\n                        <button className='favButton' style={displayFav.show} onClick={(e) => { AddFav(movie.id) }} >\n                          <StarIcon sx={{ fontSize: 30, color: amber[500] }} />\n                        </button>\n                        <button className='favButton' style={displayFav.hide} onClick={(e) => { AddFav(movie.id) }} >\n                          <StarIcon sx={{ fontSize: 30, color: amber[500] }} />\n                        </button>\n\n                      </div>\n                      <Link to={`/${movie.id}`} className=\"film\" >\n                        <img src={'https://image.tmdb.org/t/p/w500/' + image} style={{ width: \"15rem\" }} ></img>\n                        <h3 className='pt-3'>{movie.original_title}</h3>\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n\n\n              );\n            })}\n            {/* <Stack spacing={2}>\n          <Pagination count={10} variant=\"outlined\" renderItem={(item) => (\n            <PaginationItem\n              components={{ previous: ArrowBackIcon, next: ArrowForwardIcon }}\n              {...item}\n            />\n          )} />\n        </Stack> */}\n          </div>\n        </div>\n      </>\n    )\n  }"]},"metadata":{},"sourceType":"module"}